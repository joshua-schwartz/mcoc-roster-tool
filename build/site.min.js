"use strict";Vue.component("champion-item",{props:["champion"],template:'<details class="champion-item">\n        <summary>{{ champion.name }}</summary>\n        <ul class="champion-details">\n            <li>Class: {{ champion.class }}</li>\n            <li>Tier: {{ champion.tier }}</li>\n            <li>Size: {{ champion.size }}</li>\n            <li>Tags: {{ champion.tags }}</li>\n        </ul>\n        <ul class="champion-abilities">\n            <li>Can Reduce Damage From: ?</li>\n            <li>Can Deal Damage With: ?</li>\n            <li>Buffs / Debuffs: ?</li>\n        </ul>\n    </details>'});var vm=new Vue({el:"#app",data:{champsList:champData,champClasses:[{id:1,value:"science"},{id:2,value:"skill"},{id:3,value:"mutant"},{id:4,value:"tech"},{id:5,value:"cosmic"},{id:6,value:"mystic"}],champSizes:[{id:1,value:"s"},{id:2,value:"m"},{id:3,value:"l"},{id:4,value:"xl"}],champTiers:[{id:1,value:1},{id:2,value:2},{id:3,value:3}],selectedTags:[],selectedClasses:[],selectedSizes:[],selectedTiers:[]},computed:{champTags:function e(){return _.uniq(_.flatten(_.map(this.champsList,"tags"))).sort()},filteredChamps:function e(){return getBySize(getByTier(getByClass(getByTag(this.champsList,this.selectedTags),this.selectedClasses),this.selectedTiers),this.selectedSizes)}},methods:{getByClass:function e(s,i){return i.length?_.filter(s,i):s},getByTag:function e(s,i){return i.length?_.filter(s,i):s},getBySize:function e(s,i){return i.length?_.filter(s,i):s},getByTier:function e(s,i){return i.length?_.filter(s,i):s},updateClasses:function e(){console.log("update classes"),this.selectedClasses=""},updateTags:function e(){console.log("update tags"),this.selectedTags=""},updateSizes:function e(){console.log("update sizes"),this.selectedSizes=""},updateTiers:function e(){console.log("update tiers"),this.selectedTiers=""}}});